version: 1.0.{build}
skip_tags: true
#skip_branch_with_pr: true
install:
- ps: Install-Module -Name InvokeBuild -RequiredVersion 5.4.1
- ps: Install-Module -Name PSScriptAnalyzer -RequiredVersion 1.16.1
- ps: Install-Module -Name Pester -RequiredVersion 4.3.1
- ps: Install-Module -Name PlatyPS -RequiredVersion 0.9.0
- ps: #Generalize environment variables to allow build to more readily run in other build systems
- ps: Set-AppveyorBuildVariable -Name repo_version -Value (Test-ModuleManifest -Path .\module\powerbox.psd1).version
- ps: if ($ENV:APPVEYOR_REPO_BRANCH -like 'master') { Add-AppveyorMessage "Publishing version $($ENV:repo_version)" -Category Information}
- ps: if ($ENV:APPVEYOR_REPO_BRANCH -notlike 'master') {Set-AppveyorBuildVariable -Name repo_version -Value ("{0}-{1}" -f $ENV:REPO_VERSION, $ENV:APPVEYOR_REPO_BRANCH}
- ps: Update-AppveyorBuild -Version $ENV:repo_version

environment:
  nuget_api_key:
    secure: TVDL0yRh7Mq8p85ZHiK1/bnBhxCfnKFogJqtuPKY39zJAzRUf8fHYTdVxbAbOEGU

build_script:
- ps: invoke-build
after_build:
- ps: Compress-Archive -Path .\Release\powerbox\$ENV:repo_version -destination .\powerbox.zip

artifacts:
  - path: powerbox.zip
    name: module
  - path: release\powerbox
    name: module-folder

test_script:
- ps: invoke-build -task test

deploy:
  - provider: Environment
    name: gh
    on:
      branch: master
  - provider: Environment
    name: prerelease
    on:
      branch: /update.*/

deploy_script:
  - ps: Invoke-Build -task Publish


on_failure:
  ps: Update-AppveyorBuild -Version "FAILED-$($ENV:APPVEYOR_BUILD_VERSION)"
